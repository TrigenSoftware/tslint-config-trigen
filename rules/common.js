/**
 * Common config
 */

const convert = require('./convert');

module.exports = {
	'extends': [
		'tslint-eslint-rules'
	],
	'rules': convert({
		// Possible Errors
		// 'no-console':                   ['warn', { allow: ['warn', 'error'] }],
		'no-console':                   ['warn', 'warn', 'error'],
		'no-debugger':                   'warn',
		'no-constant-condition':         'error',
		'no-control-regex':              'error',
		'no-duplicate-case':             'error',
		'no-empty':                     ['error', 'allow-empty-functions'],
		'no-empty-character-class':      'error',
		'no-ex-assign':                  'error',
		'no-extra-boolean-cast':         'error',
		'no-extra-semi':                 'error',
		'no-inner-declarations':         'error',
		'no-invalid-regexp':             'error',
		'ter-no-irregular-whitespace':   'error',
		'no-regex-spaces':               'error',
		'ter-no-sparse-arrays':          'error',
		'no-unexpected-multiline':       'error',
		'valid-typeof':                  'error',

		// Best Practices
		// 'array-callback-return':         'error',
		// 'block-scoped-var':              'error',
		// 'complexity':                    'off',
		'cyclomatic-complexity':         'off',
		// 'consistent-return':             'error',
		'curly':                         'error',
		// 'default-case':                  'error',
		'switch-default':                'error',
		// 'dot-location':                 ['error', 'property'],
		// 'dot-notation':                  'error',
		// 'eqeqeq':                        'off',
		'triple-equals':                 'error',
		// 'no-caller':                     'error',
		'no-arg':                        'error',
		// 'no-case-declarations':          'error',
		'no-eval':                       'error',
		// 'no-extra-label':                'error',
		'no-switch-case-fall-through':   'error',
		// 'no-implicit-coercion':         ['error', { 'allow': ['~'] }],
		// 'no-implicit-globals':           'error',
		// 'no-implied-eval':               'error',
		'no-invalid-this':               'off',
		// 'no-iterator':                   'error',
		// 'no-lone-blocks':                'error',
		// 'no-loop-func':                  'error',
		// 'no-magic-numbers':             ['error', {
		// 	'ignore':             [-1, 0, 1],
		// 	'ignoreArrayIndexes': true
		// }],
		'no-magic-numbers':              'error',
		// 'no-multi-spaces':              ['error', { 'exceptions': {
		// 	'Property': true
		// }}],
		'no-multi-spaces':              ['error', { 'exceptions': {
			'PropertyAssignment': true
		}}],
		// 'no-multi-str':                  'error',
		// 'no-native-reassign':            'error',
		// 'no-new-func':                   'error',
		// 'no-new-wrappers':               'error',
		'no-construct':                  'error',
		// 'no-new':                        'error',
		// 'no-octal-escape':               'error',
		// 'no-param-reassign':            ['error', { 'props': false }],
		// 'no-proto':                      'error',
		'ter-no-proto':                  'error',
		'no-duplicate-variable':         'error',
		// 'no-return-assign':              'error',
		// 'no-script-url':                 'error',
		'ter-no-script-url':             'error',
		// 'no-self-compare':               'error',
		'ter-no-self-compare':           'error',
		// 'no-sequences':                  'error',
		// 'no-throw-literal':              'error',
		'no-string-throw':               'error',
		// 'no-unused-expressions':         'error',
		'no-unused-expression':         ['error', 'allow-new'],
		// 'no-useless-call':               'error',
		// 'no-useless-concat':             'error',
		// 'no-useless-escape':             'error',
		// 'no-void':                       'warn',
		// 'no-with':                       'error',
		'radix':                         'error',
		// 'yoda':                         ['error', 'never', { 'exceptRange': true }],

		// Variables
		// 'init-declarations':            ['error', 'always'],
		// 'no-catch-shadow':               'error',
		// 'no-label-var':                  'error',
		'no-shadowed-variable':          'off',
		// 'no-shadow-restricted-names':    'error',
		// 'no-undef-init':                 'error',
		// 'no-undefined':                  'error',
		'no-unused-variable':           ['error', 'check-parameters'],
		// 'no-use-before-define':         ['error', {
		// 	'functions': false,
		// 	'classes':   false
		// }],

		// CommonJS
		// 'no-new-require':                'error',

		// Stylistic Issues
		// 'padding-line-between-statements': [
		// 	'error',
		// 	{ blankLine: 'always', prev: 'import', next: '*' },
		// 	{ blankLine: 'never', prev: 'import', next: 'import' },
		// 	{ blankLine: 'always', prev: ['const', 'let'], next: '*' },
		// 	{ blankLine: 'never', prev: ['const', 'let'], next: ['const', 'let'] },
		// 	{ blankLine: 'always', prev: '*', next: 'block-like' },
		// 	{ blankLine: 'always', prev: '*', next: 'case' }
		// ],
		'array-bracket-spacing':        ['error', 'never'],
		'block-spacing':                 'error',
		'brace-style':                  ['error', '1tbs'],
		// 'camelcase':                     'error',
		// 'comma-dangle':                 ['error', 'never'],
		'trailing-comma':               ['error', { 'multiline': 'never', 'singleline': 'never' }],
		// 'comma-spacing':                 'error',
		// 'comma-style':                   'error',
		// 'computed-property-spacing':     'error',
		'ter-computed-property-spacing': 'error',
		// 'consistent-this':              ['error', 'self'],
		// 'eol-last':                      'error',
		'ter-func-call-spacing':         'error',
		// 'func-names':                    'error',
		// 'func-style':                   ['error', 'declaration', { 'allowArrowFunctions': true }],
		// 'indent':                       ['error', 'tab', { 'SwitchCase': 1 }],
		'ter-indent':                   ['error', 'tab', { 'SwitchCase': 1 }],
		// 'jsx-quotes':                   ['error', 'prefer-single'],
		// 'key-spacing':                  ['error', { 'mode': 'minimum', 'align': 'value' }],
		// 'keyword-spacing':               'error',
		'linebreak-style':               'error',
		// 'max-len':                      ['error', {
		// 	'code':                   140,
		// 	'tabWidth':               4,
		// 	'ignoreTrailingComments': true,
		// 	'ignoreUrls':             true,
		// 	'ignoreStrings':          true,
		// 	'ignoreTemplateLiterals': true,
		// 	'ignoreRegExpLiterals':   true
		// }],
		'ter-max-len':                      ['error', {
			'code':                   140,
			'tabWidth':               4,
			'ignoreTrailingComments': true,
			'ignoreUrls':             true,
			'ignoreStrings':          true,
			'ignoreTemplateLiterals': true,
			'ignoreRegExpLiterals':   true
		}],
		// 'max-nested-callbacks':         ['error', 4],
		// 'max-params':                   ['error', 6],
		// 'max-statements-per-line':       'error',
		// 'new-cap':                      ['error', { 'capIsNew': false }],
		'new-parens':                    'error',
		// 'newline-per-chained-call':      'off',
		// 'no-array-constructor':          'error',
		'no-bitwise':                    'off',
		// 'no-lonely-if':                  'error',
		'ter-no-mixed-spaces-and-tabs':  'error',
		// 'no-multiple-empty-lines':      ['error', { 'max': 1 }],
		'no-consecutive-blank-lines':    'error',
		// 'no-new-object':                 'error',
		// 'no-trailing-spaces':            'error',
		'no-trailing-whitespace':        'error',
		// 'no-unneeded-ternary':           'error',
		// 'no-whitespace-before-property': 'error',
		'one-variable-per-declaration':  'error',
		'object-curly-spacing':         ['error', 'always'],
		// 'operator-assignment':          ['error', 'always'],
		// 'operator-linebreak':           ['error', 'before', { 'overrides': { '=': 'after' }}],
		// 'quote-props':                  ['error', 'consistent'],
		'object-literal-key-quotes':    ['error', 'consistent'],
		// 'quotes':                       ['error', 'single', { 'avoidEscape': true, 'allowTemplateLiterals': true }],
		'quotemark':                    ['error', 'single', 'jsx-single', 'avoid-escape', 'avoid-template'],
		// 'semi-spacing':                  'error',
		// 'semi':                          'error',
		'semicolon':                    ['error', 'always'],
		// 'space-before-blocks':           'error',
		// 'space-before-function-paren':  ['error', 'never'],
		'space-in-parens':               'error',
		// 'space-infix-ops':              ['error', {'int32Hint': true}],
		// 'space-unary-ops':               'error',
		// 'spaced-comment':                'error',
		'comment-format':               ['error', 'check-space']
		// 'unicode-bom':                   'error'
	})
};
